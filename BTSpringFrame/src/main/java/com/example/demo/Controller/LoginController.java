package com.example.demo.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.demo.Entity.User;
import com.example.demo.Service.UserService;
import jakarta.servlet.http.HttpSession; // üëà Import c·∫ßn thi·∫øt cho Session

import java.util.Optional; 

@Controller
public class LoginController {

    @Autowired
    private UserService userService;

    @GetMapping("/login")
    public String showLoginForm() {
        return "login"; // Tr·∫£ v·ªÅ file login.html
    }

    @PostMapping("/login")
    public String handleLogin(@RequestParam("username") String username,
                              @RequestParam("password") String password,
                              ModelMap model,
                              HttpSession session) { // üëà Th√™m tham s·ªë HttpSession
        
        // Gi·∫£ ƒë·ªãnh: userService.findByUsernameAndPassword(username, password) tr·∫£ v·ªÅ Optional<User>
        Optional<User> userOptional = userService.findByUsernameAndPassword(username, password);

        if (userOptional.isPresent()) {
            User user = userOptional.get(); 
            String role = null; 
            // X√°c ƒë·ªãnh Role (Gi·∫£ s·ª≠ roleid 1 l√† ADMIN, c√≤n l·∫°i l√† USER)
            if (user.getRoleid() == 1) {
                role = "ADMIN";
            } else if (user.getRoleid() == 2) {
                role = "USER";
            } else {
                // Tr∆∞·ªùng h·ª£p roleid kh√¥ng h·ª£p l·ªá (v√≠ d·ª•: 0, 3,...)
                model.addAttribute("error", "T√†i kho·∫£n c·ªßa b·∫°n c√≥ vai tr√≤ kh√¥ng h·ª£p l·ªá. Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n.");
                return "login"; 
            }

            // 1. L∆ØU TH√îNG TIN C·∫¶N THI·∫æT V√ÄO SESSION (QUAN TR·ªåNG CHO INTERCEPTOR)
            session.setAttribute("isLoggedIn", true);
            session.setAttribute("user", user); // L∆∞u ƒë·ªëi t∆∞·ª£ng User (t√πy ch·ªçn)
            session.setAttribute("userRole", role); // üëà Interceptor s·∫Ω ƒë·ªçc gi√° tr·ªã n√†y

            // 2. Chuy·ªÉn h∆∞·ªõng theo Role (S·ª≠ d·ª•ng ƒë∆∞·ªùng d·∫´n ƒë√£ c·∫•u h√¨nh trong Interceptor)
            if ("ADMIN".equals(role)) {
                // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß Admin
                return "redirect:/admin/categories"; 
            } else {
                // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß User
                return "redirect:/users/home"; 
            }
        } else {
            // ƒêƒÉng nh·∫≠p th·∫•t b·∫°i
            model.addAttribute("error", "T√™n ƒëƒÉng nh·∫≠p ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng.");
            return "login"; 
        }
    }
    @GetMapping("/logout")
    public String logout(HttpSession session) {
        session.invalidate(); // X√≥a to√†n b·ªô Session
        return "redirect:/login"; // Chuy·ªÉn v·ªÅ trang ƒëƒÉng nh·∫≠p
    }
    @GetMapping("/users/home")
    public String userHome() {
        // Tr·∫£ v·ªÅ file JSP: /WEB-INF/views/user/home.jsp
        return "users/userhome"; 
    }
}